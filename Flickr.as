package  {		//-----------------------------	// Import	//-----------------------------	import flash.display.MovieClip;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.events.TimerEvent;		public class Flickr extends MovieClip {				//-----------------------------		// Global Arrays		//-----------------------------				private var outputArray:Array = new Array(); //Holds search score				//-----------------------------		// Global Properties		//-----------------------------				/**		* API_KEY and FLICKR_URL holds constant calues for the flickr-search		*/		private static const apiKey = "5fd8cb849caf08eee7f20fccc7882740"; //Flickr API key		private static const flickrUrl:String = "https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=" + apiKey; //Base url for flickr search				/**		* Callback function to return value to loadComplete function in LetterBox-class		*/		private var callbackFunc:Function;				/**		* This loader is only used to check when the image is ready.		*/		private var loader:URLLoader;				/**		* Set global variable for the search-word, that will be sent from LetterBox-class		*/		private var search:String;				public function Flickr() {					}				/**		* Put together the search string that will be sent to flickr, 		* depending on the value sent from the wordList array in the LetterBox-class.		* when the search-string is stored in flickrRequest. run as URLRequest and store as URLLoader.		* start initCompleteLoad.		*/		public function initFlickrRequest(search:String, callback:Function):void {			var flickrRequest:String = flickrUrl;			flickrRequest += "&per_page=" + 20;			flickrRequest += "&tags=" + search;			flickrRequest += "&text=" + search;			flickrRequest += "&safe_search=" + 1;			flickrRequest += "&nocache=" + Math.random(); // UNDVIKER ATT WEBBLÄSAREN SKA SPARA RESULTATET I CACHE-MINNET.
						var requestHit:URLRequest = new URLRequest(flickrRequest);			callbackFunc = callback;			loader = new URLLoader(requestHit);			initCompleteLoad();		}				/**		* add complete event on loader to to check when the the image is loaded.		*/		private function initCompleteLoad():void {			loader.addEventListener(Event.COMPLETE, completeLoad);		}				/**		* store the xml file downloaded from the searchresult ass result.		* imgNum holds the number for the total amount of pictures in the xml file.		* small holds the value for size 320x320 in flickr API.		* rand generates a random number from the amount of pictures available.		* start createURL and send with parameters for the selected picture in the xml file.		*/		private function completeLoad(event:Event):void {			var result:XML = new XML(loader.data);			var imgNum:int = result.photos.photo.length();			var small:String = "q";			var rand:int = Math.random() * imgNum;						createURL(result.photos.photo[rand], small);		}				/**		* createURL creates the url for the picture by adding the elements from the xml file.		* add the created url to the outputArray and run callbackFunc with the stored value from outputArray.		*/		private function createURL(element:XML, size:String):void {			   var picture:String	= "http://farm" + 				element.@farm	+ ".static.flickr.com/" + 				element.@server + "/" + 				element.@id 	+ "_" + 				element.@secret + "_" + size + ".jpg";								outputArray.push(picture);				callbackFunc(outputArray);		}	}}